[
  {
    "name": "source1.py",
    "path": "source1.py",
    "content": {
      "structured": {
        "description": "A deep learning model for depth estimation and trains it using PyTorch on a distributed training environment. It also defines validation sets and tracks the model's performance during training. The summary should include:\n\n* Defining a deep learning model for depth estimation using PyTorch\n* Distributed training environment for the model\n* Training the model on a dataset with predefined splits\n* Defining validation sets and tracking the model's performance during training\n* Using SiLogLoss as the loss function for training\n* Using AdamW optimizer with different learning rates for pretrained and non-pretrained weights\n* Saving the trained model to a checkpoint at the end of each epoch.",
        "items": [
          {
            "id": "24f00709-bf45-b3b4-7544-df0ecf0a81c4",
            "ancestors": [],
            "description": "Defines a deep learning model for depth estimation and trains it on a distributed dataset using an AdamW optimizer and SiLogLoss criterion.",
            "params": [],
            "returns": null,
            "usage": {
              "language": "python",
              "code": "from depthanythingv2 import DepthAnythingV2, args_parser\n\nif __name__ == '__main__':\n    # parse command line arguments\n    parser = arg_parser()\n    args = parser.parse_args()\n    \n    # create a new instance of the model class\n    model = DepthAnythingV2(**{'encoder': args.encoder, 'features': 64, 'out_channels': [48, 96, 192, 384]})\n    \n    # run the main function with the parsed arguments and the created model instance\n    main(args, model)\n",
              "description": ""
            },
            "name": "main",
            "location": {
              "start": 41,
              "insert": 42,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 41,
                "end": 48
              }
            },
            "item_type": "function",
            "length": 166,
            "docLength": 7
          }
        ]
      }
    }
  }
]