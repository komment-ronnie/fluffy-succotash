{"name":"source.java","path":"source.java","content":{"structured":{"description":"A class named PageInfo that contains information about a page of data. The class has four fields: currentPage, pageLimit, totalPages, and totalElements. These fields are initialized using a constructor that takes a Pageable object and a Page object as arguments. Additionally, the class provides a static factory method named of that creates a new instance of PageInfo based on a given Pageable object and Page object.","items":[{"id":"ef251710-6151-4ba5-eb48-96fb49648301","ancestors":[],"type":"function","description":"is a data structure used to represent information about a page of results in a larger dataset. It contains four fields: currentPage, pageLimit, totalPages, and totalElements. The class also includes a constructor for creating instances of the class from a Pageable object and a Page object.","name":"PageInfo","code":"@EqualsAndHashCode\n@ToString\n@Getter\n@RequiredArgsConstructor(access = AccessLevel.PRIVATE)\npublic class PageInfo {\n  private final int currentPage;\n  private final int pageLimit;\n  private final int totalPages;\n  private final long totalElements;\n  \n  public static PageInfo of(Pageable pageable, Page<?> page) {\n    return new PageInfo(\n        pageable.getPageNumber(),\n        pageable.getPageSize(),\n        page.getTotalPages(),\n        page.getTotalElements()\n    );\n  }\n}","location":{"start":12,"insert":12,"offset":" ","indent":0,"comment":null},"item_type":"class","length":19,"docLength":null,"doc":"A class named PageInfo that contains information about a page of data. The class has four fields: currentPage, pageLimit, totalPages, and totalElements. These fields are initialized using a constructor that takes a Pageable object and a Page object as arguments. Additionally, the class provides a static factory method named of that creates a new instance of PageInfo based on a given Pageable object and Page object."},{"id":"006caad3-7f1c-359d-d04f-498f69cce294","ancestors":["ef251710-6151-4ba5-eb48-96fb49648301"],"type":"function","description":"generates a `PageInfo` object containing information about the number of pages, page size, total pages, and total elements for a given `Pageable` and `Page`.","params":[{"name":"pageable","type_name":"Pageable","description":"pagination information for the given page of data, providing the page number, page size, total pages, and total elements.\n\n* `pageable.getPageNumber()` represents the current page number being accessed.\n* `pageable.getPageSize()` signifies the number of elements per page.\n* `page.getTotalPages()` denotes the total number of pages in the collection.\n* `page.getTotalElements()` indicates the overall quantity of elements in the collection.","complex_type":true},{"name":"page","type_name":"Page<?>","description":"current page being processed, providing information on its position, size, and total pages and elements in the collection.\n\n* `pageNumber`: The page number that contains the element.\n* `pageSize`: The number of elements in a single page.\n* `totalPages`: The total number of pages available for the collection.\n* `totalElements`: The total number of elements in the collection.","complex_type":true}],"returns":{"type_name":"PageInfo","description":"a `PageInfo` object containing various pagination-related information.\n\n* The first parameter, `pageable`, represents the pageable object that contains information about the current page being processed.\n* The second parameter, `page`, represents the page object itself, which contains information such as the total number of pages and elements in the result set.\n* The returned `PageInfo` object encapsulates these parameters and provides a convenient way to access them.\n* The `getPageNumber()` method returns the current page number being processed.\n* The `getPageSize()` method returns the number of elements per page.\n* The `getTotalPages()` method returns the total number of pages in the result set.\n* The `getTotalElements()` method returns the total number of elements in the result set.","complex_type":true},"name":"of","code":"public static PageInfo of(Pageable pageable, Page<?> page) {\n    return new PageInfo(\n        pageable.getPageNumber(),\n        pageable.getPageSize(),\n        page.getTotalPages(),\n        page.getTotalElements()\n    );\n  }","location":{"start":22,"insert":22,"offset":" ","indent":2,"comment":null},"item_type":"method","length":8,"docLength":null,"doc":"A class named PageInfo that contains information about a page of data. The class has four fields: currentPage, pageLimit, totalPages, and totalElements. These fields are initialized using a constructor that takes a Pageable object and a Page object as arguments. Additionally, the class provides a static factory method named of that creates a new instance of PageInfo based on a given Pageable object and Page object."}]}}}